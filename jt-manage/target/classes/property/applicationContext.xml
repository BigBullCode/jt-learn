<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:jee="http://www.springframework.org/schema/jee"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
	       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/jee/spring-mvc-3.1.xsd
	       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	   default-autowire="byName" default-lazy-init="false">
	<description>Application Context Configure</description>          
	 
	<import resource="redis-context.xml"/>
	<!-- Class Package Scan Annotation Driver Bean, include Annotation autowire  -->
	<context:component-scan base-package="com.steel.service" />
	 
	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" /> 
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
    <!--
    <bean class="org.springframework.beans.factory.annotation.PersistenceAnnotationBeanPostProcessor" />
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnontationBeanPostProcessor" />
    -->
    
    <!-- 定时任务执行保存访问日志start -->
    <!--
    <bean id="saveWebUrl" class="com.huaye.index.WebUrlCreate">
    </bean>   
    <bean id="saveWebUrlToDB"    
        class="org.springframework.scheduling.timer.ScheduledTimerTask">    
        <property name="delay">    
           <value>60000</value>    
        </property>    
        <property name="period">    
            <value>300000</value>    
       </property>
       <property name="timerTask">    
            <ref local="saveWebUrl" />    
        </property>    
    </bean>
    -->
    
    <!-- 20180117  pzr 注释 因为com.system.base.CreateMessage没有导入
    <bean id="createMessage" class="com.system.base.CreateMessage">
    </bean>   
    <bean id="createMessageFromDB"    
        class="org.springframework.scheduling.timer.ScheduledTimerTask">    
        <property name="delay">    
           <value>60000</value>    
        </property>    
        <property name="period">    
            <value>300000</value>    
       </property>
       <property name="timerTask">    
            <ref local="createMessage" />    
        </property>    
    </bean> -->
    <!--shuaige增加上面的createIndex全文索引定时重建任务  -->
    <bean id="timerBean" class="org.springframework.scheduling.timer.TimerFactoryBean"> 
		<property name="scheduledTimerTasks">		 
			<list>	 
				 
				<!--取消访问URL访问日志功能
				<ref bean="saveWebUrlToDB"/>-->
				<!-- <ref bean="createMessageFromDB" /> -->
			</list>		 
		</property>	 
	</bean> 
	
	<!-- 辅料微信端确认，若没确认，固定时间端定时器默认执行确认 -->
	<!-- 
	20180117  pzr 注释 因为com.steel.control.acce.AccessoriesTask没有导入
	<bean id="createAccessoriesTask" class="com.steel.control.acce.AccessoriesTask">
    </bean>   
    <bean id="createAccessoriesTimerTask"    
        class="org.springframework.scheduling.timer.ScheduledTimerTask">    
        <property name="delay">    
           <value>60000</value>    
        </property>    
        <property name="period">    
            <value>60000</value>    
       </property>
       <property name="timerTask">    
            <ref local="createAccessoriesTask" />    
        </property>    
    </bean> -->
	

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	  <property name="jndiName"><value>java:comp/env/jdbc/oracle</value></property>
	</bean>
	
 
 	<!-- 阿里巴巴数据源-->
 	<!-- <bean id="readDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
 		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
 		<property name="url" value="jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST= (ADDRESS=(HOST = 172.31.0.116) (PROTOCOL=TCP)(PORT = 1521))(LOAD_BALANCE = yes) (FAILOVER = yes))(CONNECT_DATA = (SERVICE_NAME =lgdata)))"/>
 		<property name="username" value="ehy"/>
	  	<property name="password" value="ehy"/>
 		<property name="initialSize" value="30" />
	  	<property name="maxActive" value="400" />
	 	<property name="maxIdle" value="10" />
	  	<property name="minIdle" value="2" />
	  	<property name="maxWait" value="60000" />
	  	<property name="poolPreparedStatements" value="true" /> 
		<property name="maxPoolPreparedStatementPerConnectionSize" value="33" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 1 from dual" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />	
 	</bean> -->
 	
 	 

	<!-- 配置数据库事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	
	<tx:annotation-driven/>
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* com..*Service.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation"  advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	   <tx:attributes>
		  <tx:method name="get*" read-only="true"></tx:method>
		  <tx:method name="search*" read-only="true"></tx:method>
		  <tx:method name="select*" read-only="true"></tx:method>
		  <tx:method name="load*" read-only="true"></tx:method>
		  <tx:method name="query*" read-only="true"></tx:method>
		  <tx:method name="check*" read-only="true"></tx:method>
		  <tx:method name="save*"   isolation="DEFAULT" read-only="false" propagation="REQUIRED" rollback-for="Exception"></tx:method>
		  <tx:method name="add*"    isolation="DEFAULT" read-only="false" propagation="REQUIRED" rollback-for="Exception"></tx:method>
		  <tx:method name="update*" isolation="DEFAULT" read-only="false" propagation="REQUIRED" rollback-for="Exception"></tx:method>
		  <tx:method name="insert*" isolation="DEFAULT" read-only="false" propagation="REQUIRED" rollback-for="Exception"></tx:method>
		  <tx:method name="delete*" isolation="DEFAULT" read-only="false" propagation="REQUIRED" rollback-for="Exception"></tx:method>
		  <tx:method name="create*"  isolation="DEFAULT" read-only="false" propagation="REQUIRED" rollback-for="Exception"></tx:method>
	   </tx:attributes>
	</tx:advice>
	 
	 
	
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	         <property name="configLocations">    
                <list>    
                        <value>classpath:config/sqlMap_base.xml</value>   
                        <value>classpath:config/sqlMap_user.xml</value> 
                        <value>classpath:config/sqlMap_proc.xml</value>
                        <value>classpath:config/sqlMap_logistics.xml</value>
                        <value>classpath:config/sqlMap_trade.xml</value>
                        <value>classpath:config/sqlMap_finance.xml</value>
                        <value>classpath:config/sqlMap_review.xml</value>
                        <value>classpath:config/sqlMap_trans.xml</value>
                       <!--  <value>classpath:config/sqlMap_operator.xml</value>  -->   
              </list>     
                </property>
		
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- shuaige add readSqlMapClient by test -->
	<!-- <bean id="readSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	         <property name="configLocations">    
                <list>    
                       <value>classpath:config/sqlMap_base.xml</value>   
                        <value>classpath:config/sqlMap_user.xml</value> 
                        <value>classpath:config/sqlMap_proc.xml</value>
                        <value>classpath:config/sqlMap_logistics.xml</value>
                        <value>classpath:config/sqlMap_trade.xml</value>
                </list>     
                </property>
		
		<property name="dataSource" ref="readDataSource"></property>
	</bean> -->
	

	<bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient" ref="sqlMapClient"></property>
	</bean>

	<!-- shuaige20171225-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>	
	
	<bean id="dao" class="com.steel.service.base.impl.BaseDaoImpl" autowire="byName" />
	<bean id="smsClient" class="com.system.common.sms.SmsClient" autowire="byName" >
		<property name="dao" ref="dao"></property>
	</bean>
 	<bean id="factory" class="com.system.BeanFactoryHelper"/>
</beans>
